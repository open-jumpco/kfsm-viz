@startuml
state default {
LOCKED --> LOCKED : CARD[{cardId->requireNotNull(cardId)isOverrideCard(cardId)&&overrideActive}] :: { cancelOverride() }
LOCKED --> LOCKED : CARD[{cardId->requireNotNull(cardId)isOverrideCard(cardId)}] :: { activateOverride() }
LOCKED --> UNLOCKED : CARD[{cardId->requireNotNull(cardId)overrideActive||isValidCard(cardId)}] :: { unlock() }
LOCKED --> LOCKED : CARD[{cardId->requireNotNull(cardId){"cardId is required"}!isValidCard(cardId)}] :: {cardId-> requireNotNull(cardId) invalidCard(cardId) }
UNLOCKED --> LOCKED : CARD[{cardId->requireNotNull(cardId)isOverrideCard(cardId)}] :: { lock() }
UNLOCKED --> LOCKED : PASS :: { lock() }
}
@enduml
